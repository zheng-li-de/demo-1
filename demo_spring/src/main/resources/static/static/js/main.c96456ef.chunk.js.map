{"version":3,"sources":["contexts/UserContext.jsx","core/api.js","core/reducer.js","components/UserProfile.jsx","components/LoginForm.jsx","components/App.jsx","serviceWorker.js","index.jsx"],"names":["UserContext","createContext","profile","hasLoginError","getProfileError","saveProfileError","login","logout","getProfile","setProfile","dispatch","axios","defaults","withCredentials","Api","_handleErrorResponse","response","data","err","error","message","Error","code","statusText","status","username","password","callback","self","this","post","then","catch","id","get","INITIAL_PROFILE","avatar","description","link","INITIAL_STATE","user","reducer","state","action","type","UserProfile","useContext","useState","saving","setSaving","useEffect","onChange","event","target","name","value","className","placeholder","required","src","width","height","alt","onClick","disabled","LoginForm","setUsername","setPassword","onInputChange","setter","e","onSubmit","preventDefault","App","useReducer","currentValue","Provider","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"iOAceA,G,KAZKC,wBAAc,CAChCC,QAAS,KACTC,eAAe,EACfC,iBAAiB,EACjBC,kBAAkB,EAClBC,MAAO,kBAAM,MACbC,OAAQ,kBAAM,MACdC,WAAY,kBAAM,MAClBC,WAAY,kBAAM,MAClBC,SAAU,kBAAM,S,gBCVlBC,IAAMC,SAASC,iBAAkB,EAEjC,IAmFeC,EAnFH,CAERC,qBAAsB,SAASC,GAC7B,IAAIC,EAAOD,EAASC,KAChBC,EAAM,KAQV,OAPID,GAAQA,EAAKE,OAASF,EAAKE,MAAMC,SACnCF,EAAM,IAAIG,MAAMJ,EAAKE,MAAMC,UACvBE,KAAOL,EAAKE,MAAMG,MAEtBJ,EAAM,IAAIG,MAAML,EAASO,WAAWP,EAASO,WAAW,2BACpDD,KAAON,EAASQ,OAEfN,GAGTZ,MAAO,SAAUmB,EAAUC,EAAUC,GACnC,IAAIT,EAAKU,EAAOC,KAChBlB,IAAMmB,KAAK,8BAA+B,CAACL,SAASA,EAAUC,SAASA,IACpEK,MAAK,SAASf,OAGdgB,OAAM,SAASb,GACVA,EAAMH,SACRE,EAAMU,EAAKb,qBAAqBI,EAAMH,WAEtCE,EAAM,IAAIG,MAAMF,EAAMC,UAClBE,MAAQ,KAGfS,MAAK,WACJJ,EAAST,OAIfV,WAAY,SAAUyB,EAAIN,GACxB,IAAIV,EAAMC,EAAKU,EAAOC,KACtBlB,IAAMuB,IAAI,wCAAwCD,GAC/CF,MAAK,SAASf,GACRA,EAASC,KAIZA,EAAOD,EAASC,MAHhBC,EAAM,IAAIG,MAAM,qBACZC,KAAO,KAKdU,OAAM,SAASb,GACVA,EAAMH,SACRE,EAAMU,EAAKb,qBAAqBI,EAAMH,WAEtCE,EAAM,IAAIG,MAAMF,EAAMC,UAClBE,MAAQ,KAGfS,MAAK,WACJJ,EAAST,EAAKD,OAIpBR,WAAY,SAASwB,EAAI/B,EAASyB,GAChC,IAAIV,EAAMC,EAAKU,EAAOC,KACtBlB,IAAMmB,KAAK,wCAAwCG,EAAI/B,GACpD6B,MAAK,SAASf,GACRA,EAASC,KAIZA,EAAOD,EAASC,MAHhBC,EAAM,IAAIG,MAAM,qBACZC,KAAO,KAKdU,OAAM,SAASb,GACVA,EAAMH,SACRE,EAAMU,EAAKb,qBAAqBI,EAAMH,WAEtCE,EAAM,IAAIG,MAAMF,EAAMC,UAClBE,MAAQ,KAGfS,MAAK,WACJJ,EAAST,EAAKD,Q,OCjFlBkB,EAAkB,CACpBV,SAAU,GACVW,OAAQ,GACRC,YAAa,GACbC,KAAM,IAGJC,EAAgB,CAClBC,KAAM,KACNtC,QAASiC,EACThC,eAAe,EACfC,iBAAiB,EACjBC,kBAAkB,GAIhBoC,EAAU,SAACC,EAAOC,GACpB,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAO,2BAAIF,GAAX,IAAkBvC,eAAe,EAAOqC,KAAM,CAACP,GAAI,GAAI/B,QAASiC,IAClE,IAAK,aACH,OAAO,2BAAIO,GAAX,IAAkBvC,eAAe,EAAMqC,KAAM,KAAMtC,QAASiC,IAC9D,IAAK,SACH,OAAO,2BAAIO,GAAX,IAAkBF,KAAM,KAAMtC,QAASiC,IACzC,IAAK,sBACH,OAAO,2BAAIO,GAAX,IAAkBtC,iBAAiB,EAAOF,QAASyC,EAAOzC,UAC5D,IAAK,mBACH,OAAO,2BAAIwC,GAAX,IAAkBtC,iBAAiB,EAAMF,QAASiC,IACpD,IAAK,uBACH,OAAO,2BAAIO,GAAX,IAAkBrC,kBAAkB,IACtC,IAAK,oBACH,OAAO,2BAAIqC,GAAX,IAAkBrC,kBAAkB,IACtC,IAAK,uBACH,OAAO,2BAAIqC,GAAX,IAAkBxC,QAAQ,2BAAIwC,EAAMxC,SAAX,IAAoBuB,SAASkB,EAAOlB,aAC/D,IAAK,qBACH,OAAO,2BAAIiB,GAAX,IAAkBxC,QAAQ,2BAAIwC,EAAMxC,SAAX,IAAoBkC,OAAOO,EAAOP,WAC7D,IAAK,0BACH,OAAO,2BAAIM,GAAX,IAAkBxC,QAAQ,2BAAIwC,EAAMxC,SAAX,IAAoBmC,YAAYM,EAAON,gBAClE,IAAK,mBACH,OAAO,2BAAIK,GAAX,IAAkBxC,QAAQ,2BAAIwC,EAAMxC,SAAX,IAAoBoC,KAAKK,EAAOL,SAC3D,QACE,MAAM,IAAIjB,MAAJ,+BAAkCsB,EAAOC,S,OC6CxCC,EAlFK,WAAO,IAAD,EAE8DC,qBAAW9C,GAAzFwC,EAFgB,EAEhBA,KAAMtC,EAFU,EAEVA,QAASG,EAFC,EAEDA,iBAAkBG,EAFjB,EAEiBA,WAAYC,EAF7B,EAE6BA,WAAYF,EAFzC,EAEyCA,OAAQG,EAFjD,EAEiDA,SAFjD,EAIIqC,oBAAS,GAJb,mBAIjBC,EAJiB,KAITC,EAJS,KAOxBC,qBAAU,WACR1C,MACC,CAACgC,EAAKP,KAET,IAAMkB,EAAW,SAACC,GAChB,IAAMC,EAASD,EAAMC,OACrB3C,EAAS,aAACkC,KAAK,eAAeS,EAAOC,MAAOD,EAAOC,KAAMD,EAAOE,SAUlE,OACE,yBAAKC,UAAU,cACb,4CACCnD,GACC,yBAAK4B,GAAG,QAAQuB,UAAU,oBAA1B,eAIF,kCACE,2CACA,+BACE,0CACA,2BACEF,KAAK,WACLV,KAAK,OACLW,MAAOrD,EAAQuB,SACf0B,SAAUA,EACVM,YAAY,WACZC,UAAQ,KAGZ,+BACE,6CACA,8BACEJ,KAAK,cACLV,KAAK,OACLW,MAAOrD,EAAQmC,YACfc,SAAUA,KAGd,+BACE,sCACA,2BACEG,KAAK,OACLV,KAAK,OACLW,MAAOrD,EAAQoC,KACfa,SAAUA,KAGd,+BACE,wCACA,2BACEG,KAAK,SACLV,KAAK,OACLW,MAAOrD,EAAQkC,OACfe,SAAUA,KAGbjD,EAAQkC,QACT,yBAAKH,GAAG,aAAa0B,IAAKzD,EAAQkC,QAAU,GAAIwB,MAAM,MAAMC,OAAO,MAAMC,IAAI,MAG/E,4BAAQ7B,GAAG,OAAO8B,QA3DP,WACbd,GAAU,GACVxC,GAAW,WACTwC,GAAU,OAwDyBe,SAAUhB,GAA7C,QACA,6BACA,4BAAQf,GAAG,SAAS8B,QAASxD,GAA7B,YCzBS0D,EApDG,WAAO,IAAD,EACWnB,qBAAW9C,GAApCM,EADc,EACdA,MAAOH,EADO,EACPA,cADO,EAEU4C,mBAAS,IAFnB,mBAEftB,EAFe,KAELyC,EAFK,OAGUnB,mBAAS,IAHnB,mBAGfrB,EAHe,KAGLyC,EAHK,KAUhBC,EAAgB,SAAAC,GAAM,OAAI,SAAAC,GAC9BD,EAAOC,EAAEjB,OAAOE,SAGlB,OACE,0BAAMC,UAAU,aAAae,SAVd,SAAAD,GACfA,EAAEE,iBACFlE,EAAMmB,EAAUC,KASd,4CACCvB,GACC,yBAAK8B,GAAG,QAAQuB,UAAU,oBAA1B,uCAIF,kCACE,+CACA,+BACE,0CACA,2BACEZ,KAAK,OACLU,KAAK,WACLC,MAAO9B,EACP0B,SAAUiB,EAAcF,GACxBT,YAAY,WACZC,UAAQ,KAGZ,+BACE,0CACA,2BACEd,KAAK,WACLU,KAAK,WACLC,MAAO7B,EACPyB,SAAUiB,EAAcD,GACxBV,YAAY,WACZC,UAAQ,MAId,2CCcSe,MAtDf,WAAgB,IAAD,EAEaC,qBAAWjC,EAASF,GAFjC,mBAENG,EAFM,KAEChC,EAFD,KAIPiE,EAAe,CACnBnC,KAAME,EAAMF,KACZtC,QAASwC,EAAMxC,QACfC,cAAeuC,EAAMvC,cACrBC,gBAAiBsC,EAAMtC,gBACvBC,iBAAkBqC,EAAMrC,iBACxBK,SAAUA,EACVJ,MAAO,SAACmB,EAAUC,GAChBZ,EAAIR,MAAMmB,EAAUC,GAAU,SAASR,GAEnCR,EADEQ,EACO,CAAC0B,KAAM,cAEP,CAACA,KAAM,sBAKtBrC,OAAQ,kBAAMG,EAAS,CAAEkC,KAAM,YAE/BpC,WAAY,SAACmB,GACXb,EAAIN,WAAWkC,EAAMF,KAAKP,IAAI,SAASf,EAAKhB,GAExCQ,EADEQ,EACO,CAAC0B,KAAK,oBAEN,CAACA,KAAK,sBAAuB1C,QAAQA,IAE5CyB,GAAUA,QAIlBlB,WAAY,SAACkB,GACXb,EAAIL,WAAWiC,EAAMF,KAAKP,GAAIS,EAAMxC,SAAS,SAASgB,GAElDR,EADEQ,EACO,CAAC0B,KAAK,qBAEN,CAACA,KAAK,yBAEbjB,GAAUA,SAKpB,OACE,kBAAC,EAAYiD,SAAb,CAAsBrB,MAAOoB,GAC1BjC,EAAMF,MAAQ,kBAAC,EAAD,OACbE,EAAMF,MAAQ,kBAAC,EAAD,QChDhBqC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTrD,MAAK,SAAA0D,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjD,QACf4C,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,WAO5BzD,OAAM,SAAAb,GACL4E,QAAQ5E,MAAM,4CAA6CA,MCzFjEgF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDWnB,SAAkBlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIkB,IAAIC,GAAwB1B,OAAOC,SAAS0B,MACpDC,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,QAAQ,WAC9B,IAAMxB,EAAK,UAAMqB,GAAN,sBAEP5B,IAgEV,SAAiCO,EAAOC,GAEtCwB,MAAMzB,EAAO,CACX0B,QAAS,CAAE,iBAAkB,YAE5B/E,MAAK,SAAAf,GAEJ,IAAM+F,EAAc/F,EAAS8F,QAAQ5E,IAAI,gBAEnB,MAApBlB,EAASQ,QACO,MAAfuF,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5C1B,UAAUC,cAAc0B,MAAMlF,MAAK,SAAA0D,GACjCA,EAAayB,aAAanF,MAAK,WAC7BgD,OAAOC,SAASmC,eAKpBhC,EAAgBC,EAAOC,MAG1BrD,OAAM,WACL+D,QAAQC,IACN,oEAvFAoB,CAAwBhC,EAAOC,GAI/BC,UAAUC,cAAc0B,MAAMlF,MAAK,WACjCgE,QAAQC,IACN,iHAMJb,EAAgBC,EAAOC,OCjC/BE,I","file":"static/js/main.c96456ef.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst UserContext = createContext({\n  profile: null,\n  hasLoginError: false,\n  getProfileError: false,\n  saveProfileError: false,\n  login: () => null,\n  logout: () => null,\n  getProfile: () => null,\n  setProfile: () => null,\n  dispatch: () => null\n});\n\nexport default UserContext;","import axios from 'axios';\naxios.defaults.withCredentials = true;\n\nconst Api = {\n\n    _handleErrorResponse: function(response){\n      var data = response.data;\n      var err = null;\n      if (data && data.error && data.error.message) {\n        err = new Error(data.error.message);\n        err.code = data.error.code;\n      } else {\n        err = new Error(response.statusText?response.statusText:'invalid error response');\n        err.code = response.status;\n      }\n      return err;\n    },\n  \n    login: function (username, password, callback) {\n      var err, self = this;\n      axios.post('http://localhost:8080/login', {username:username, password:password})\n        .then(function(response){\n          \n        })\n        .catch(function(error){\n          if (error.response) {\n            err = self._handleErrorResponse(error.response);\n          } else {\n            err = new Error(error.message);\n            err.code = -1;\n          }\n        })\n        .then(function(){\n          callback(err);\n        });\n    },\n  \n    getProfile: function (id, callback) {\n      var data, err, self = this;\n      axios.get('http://localhost:8080/api/v1/profile/'+id)\n        .then(function(response){\n          if (!response.data) {\n            err = new Error('invalid response');\n            err.code = 0;\n          } else {\n            data = response.data;\n          }\n        })\n        .catch(function(error){\n          if (error.response) {\n            err = self._handleErrorResponse(error.response);\n          } else {\n            err = new Error(error.message);\n            err.code = -1;\n          }\n        })\n        .then(function(){\n          callback(err, data);\n        });\n    },\n  \n    setProfile: function(id, profile, callback) {\n      var data, err, self = this;\n      axios.post('http://localhost:8080/api/v1/profile/'+id, profile)\n        .then(function(response){\n          if (!response.data) {\n            err = new Error('invalid response');\n            err.code = 0;\n          } else {\n            data = response.data;\n          }\n        })\n        .catch(function(error){\n          if (error.response) {\n            err = self._handleErrorResponse(error.response);\n          } else {\n            err = new Error(error.message);\n            err.code = -1;\n          }\n        })\n        .then(function(){\n          callback(err, data);\n        });\n    }\n};\n\nexport default Api;","const INITIAL_PROFILE = {\n    username: \"\",\n    avatar: \"\",\n    description: \"\",\n    link: \"\",\n};\n  \nconst INITIAL_STATE = {\n    user: null,\n    profile: INITIAL_PROFILE,\n    hasLoginError: false,\n    getProfileError: false,\n    saveProfileError: false\n};\n\n//TODO: use redux to do state management\nconst reducer = (state, action) => {\n    switch (action.type) {\n      case \"login_success\": \n        return {...state, hasLoginError: false, user: {id: 1}, profile: INITIAL_PROFILE};\n      case \"login_fail\": \n        return {...state, hasLoginError: true, user: null, profile: INITIAL_PROFILE};\n      case \"logout\":\n        return {...state, user: null, profile: INITIAL_PROFILE};\n      case \"get_profile_success\":\n        return {...state, getProfileError: false, profile: action.profile};\n      case \"get_profile_fail\":\n        return {...state, getProfileError: true, profile: INITIAL_PROFILE};\n      case \"save_profile_success\":\n        return {...state, saveProfileError: false};\n      case \"save_profile_fail\":\n        return {...state, saveProfileError: true};\n      case 'set_profile_username':\n        return {...state, profile:{...state.profile, username:action.username}};\n      case 'set_profile_avatar':\n        return {...state, profile:{...state.profile, avatar:action.avatar}};\n      case 'set_profile_description':\n        return {...state, profile:{...state.profile, description:action.description}};\n      case 'set_profile_link':\n        return {...state, profile:{...state.profile, link:action.link}};\n      default:\n        throw new Error(`Invalid action type: ${action.type}`);\n    }\n};\n\nexport {reducer, INITIAL_STATE, INITIAL_PROFILE};\n  ","import React, { useState, useEffect, useContext } from \"react\";\nimport \"../styles/App.css\";\nimport UserContext from \"../contexts/UserContext\";\n\nconst UserProfile = () => {\n\n  const { user, profile, saveProfileError, getProfile, setProfile, logout, dispatch } = useContext(UserContext);\n\n  const [saving, setSaving] = useState(false);\n\n \n  useEffect(() => {\n    getProfile();\n  }, [user.id]);\n\n  const onChange = (event) => {\n    const target = event.target;\n    dispatch({type:\"set_profile_\"+target.name, [target.name]:target.value});\n  };\n\n  const onSave = () => {\n    setSaving(true);\n    setProfile(function(){\n      setSaving(false);\n    });\n  };\n\n  return (\n    <div className=\"login-form\">\n      <h1>User Profile</h1>\n      {saveProfileError && (\n        <div id=\"error\" className=\"login-form-error\">\n          Save Failed\n        </div>\n      )}\n      <fieldset>\n        <legend>Profile</legend>\n        <label>\n          <span>Username</span>\n          <input\n            name=\"username\"\n            type=\"text\"\n            value={profile.username}\n            onChange={onChange}\n            placeholder=\"username\"\n            required\n          />\n        </label>\n        <label>\n          <span>Description</span>\n          <textarea\n            name=\"description\"\n            type=\"text\"\n            value={profile.description}\n            onChange={onChange}\n          />\n        </label>\n        <label>\n          <span>Link</span>\n          <input\n            name=\"link\"\n            type=\"text\"\n            value={profile.link}\n            onChange={onChange}\n          />\n        </label>\n        <label>\n          <span>Avatar</span>\n          <input\n            name=\"avatar\"\n            type=\"text\"\n            value={profile.avatar}\n            onChange={onChange}\n          />\n        </label>\n        {profile.avatar && (\n        <img id=\"avatar_img\" src={profile.avatar || ''} width=\"100\" height=\"100\" alt=\"\"/>\n        )}   \n      </fieldset>\n      <button id=\"save\" onClick={onSave} disabled={saving}>Save</button>\n      <br/>\n      <button id=\"logout\" onClick={logout} >Logout</button>\n    </div>\n  );\n};\n\nexport default UserProfile;","import React, { useState, useContext } from \"react\";\nimport \"../styles/App.css\";\nimport UserContext from \"../contexts/UserContext\";\n\nconst LoginForm = () => {\n  const { login, hasLoginError } = useContext(UserContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const onSubmit = e => {\n    e.preventDefault();\n    login(username, password);\n  };\n\n  const onInputChange = setter => e => {\n    setter(e.target.value);\n  };\n\n  return (\n    <form className=\"login-form\" onSubmit={onSubmit}>\n      <h1>Please Login</h1>\n      {hasLoginError && (\n        <div id=\"error\" className=\"login-form-error\">\n          Login Failed: Incorrect Credentials\n        </div>\n      )}\n      <fieldset>\n        <legend>Credentials</legend>\n        <label>\n          <span>Username</span>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={onInputChange(setUsername)}\n            placeholder=\"username\"\n            required\n          />\n        </label>\n        <label>\n          <span>Password</span>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={onInputChange(setPassword)}\n            placeholder=\"password\"\n            required\n          />\n        </label>\n      </fieldset>\n      <button>Login</button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React, { useReducer, lazy }  from 'react';\n\nimport '../styles/App.css';\n\nimport UserContext from '../contexts/UserContext';\n\nimport Api from '../core/api.js';\nimport { reducer, INITIAL_STATE} from '../core/reducer.js';\nimport UserProfile from './UserProfile';\nimport LoginForm from \"./LoginForm\";\n\nfunction App() {\n\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n\n  const currentValue = {\n    user: state.user,\n    profile: state.profile,\n    hasLoginError: state.hasLoginError,\n    getProfileError: state.getProfileError,\n    saveProfileError: state.saveProfileError,\n    dispatch: dispatch,\n    login: (username, password) => {\n      Api.login(username, password, function(err){\n        if (err) {\n          dispatch({type: \"login_fail\"});\n        } else {\n          dispatch({type: \"login_success\"});\n        }\n      });\n      \n    },\n    logout: () => dispatch({ type: \"logout\" }),\n\n    getProfile: (callback) => {\n      Api.getProfile(state.user.id, function(err, profile){\n        if (err) {\n          dispatch({type:'get_profile_fail'});\n        } else {\n          dispatch({type:'get_profile_success', profile:profile});\n        }\n        if (callback) callback();\n      });\n    },\n\n    setProfile: (callback) => {\n      Api.setProfile(state.user.id, state.profile, function(err){\n        if (err) {\n          dispatch({type:'save_profile_fail'});\n        } else {\n          dispatch({type:'save_profile_success'});\n        }\n        if (callback) callback();\n      });\n    }\n  };\n\n  return (\n    <UserContext.Provider value={currentValue}>\n      {state.user && <UserProfile />}\n      {!state.user && <LoginForm />}\n    </UserContext.Provider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.jsx';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}